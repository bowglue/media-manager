name: Build and Package

on:
  push:
    branches: [ main ]
  # Keep the release trigger for manual releases
  release:
    types: [created, published]

# Define permissions needed for GitHub releases
permissions:
  contents: write
  packages: write

env:
  GO_VERSION: '1.24.1'
  FFMPEG_URL: 'https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip'

jobs:
  build:
    name: Build and Package
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: MediaManagerServer/go.sum
      
      - name: Create directory structure
        run: |
          mkdir -p dist/bin
          mkdir -p dist/database/{data,migrations}
          mkdir -p output
      
      - name: Build application
        run: |
          cd MediaManagerServer
          go mod tidy
          go get github.com/u2takey/ffmpeg-go
          go build -v -o ../dist/mediamanager.exe ./cmd/ffmpeg/
        shell: pwsh
      
      - name: Cache FFmpeg
        uses: actions/cache@v4
        with:
          path: ffmpeg.zip
          key: ffmpeg-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ffmpeg-
      
      - name: Download and extract FFmpeg
        run: |
          if (!(Test-Path ffmpeg.zip)) {
            Invoke-WebRequest -Uri ${{ env.FFMPEG_URL }} -OutFile ffmpeg.zip
          }
          7z x ffmpeg.zip -odist/ -y
          Move-Item -Path "dist/ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe" -Destination "dist/bin/" -Force
          Move-Item -Path "dist/ffmpeg-master-latest-win64-gpl/bin/ffprobe.exe" -Destination "dist/bin/" -Force
          Remove-Item -Path "dist/ffmpeg-master-latest-win64-gpl" -Recurse -Force
        shell: pwsh
      
      - name: Copy application files
        run: |
          Copy-Item -Path "MediaManagerServer/database/migrations/*.sql" -Destination "dist/database/migrations/" -ErrorAction SilentlyContinue
          Copy-Item -Path "MediaManagerServer/database/sqlc.yaml" -Destination "dist/database/" -ErrorAction SilentlyContinue
          Copy-Item -Path "MediaManagerServer/video.html" -Destination "dist/" -ErrorAction SilentlyContinue
        shell: pwsh
      
      - name: Create installer
        run: |
          choco install innosetup -y --no-progress
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
          if (!(Test-Path "output/MediaManagerSetup.exe")) {
            Write-Error "Installer creation failed"
            exit 1
          }
        shell: pwsh
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MediaManager-Installer
          path: output/MediaManagerSetup.exe
          retention-days: 5
      
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ github.sha }}"
          body: |
            Automated release for commit ${{ github.sha }}
            
            Changes in this release:
            - Updated FFmpeg to latest version
            - Improved build process
            - Enhanced error handling
          files: output/MediaManagerSetup.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          generate_release_notes: true
      
      - name: Release (manual)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: output/MediaManagerSetup.exe
          token: ${{ secrets.GITHUB_TOKEN }}
