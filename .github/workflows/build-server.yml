name: Build and Package

on:
  push:
    branches: [ main ]
    tags: ['v*']
  release:
    types: [created, published]

# Define permissions needed for GitHub releases
permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build and Create Installer
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate version
        id: version
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -like 'refs/tags/v*') {
            $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $date = Get-Date -Format "yyyy.MM.dd"
            $sha = $env:GITHUB_SHA.Substring(0, 7)
            $version = "$date-$sha"
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
          cache: true
          cache-dependency-path: MediaManagerServer/go.sum
      
      - name: Create directories
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist/bin
          New-Item -ItemType Directory -Force -Path dist/database/data
          New-Item -ItemType Directory -Force -Path dist/database/migrations
          New-Item -ItemType Directory -Force -Path output
      
      - name: Build application
        shell: pwsh
        run: |
          cd MediaManagerServer
          go mod tidy
          go build -v -o ../dist/mediamanager.exe ./cmd/ffmpeg/
      
      - name: Download and extract FFmpeg
        shell: pwsh
        run: |
          $ffmpegUrl = "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip"
          Invoke-WebRequest -Uri $ffmpegUrl -OutFile ffmpeg.zip
          7z x ffmpeg.zip -odist/ -y
          Move-Item -Path "dist/ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe" -Destination "dist/bin/" -Force
          Move-Item -Path "dist/ffmpeg-master-latest-win64-gpl/bin/ffprobe.exe" -Destination "dist/bin/" -Force
          Remove-Item -Path "dist/ffmpeg-master-latest-win64-gpl" -Recurse -Force
      
      - name: Copy application files
        shell: pwsh
        run: |
          Copy-Item -Path "MediaManagerServer/database/migrations/*.sql" -Destination "dist/database/migrations/" -ErrorAction SilentlyContinue
          Copy-Item -Path "MediaManagerServer/database/sqlc.yaml" -Destination "dist/database/" -ErrorAction SilentlyContinue
          Copy-Item -Path "MediaManagerServer/video.html" -Destination "dist/" -ErrorAction SilentlyContinue
      
      - name: Create installer
        shell: pwsh
        run: |
          choco install innosetup -y --no-progress
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
          if (!(Test-Path "output/MediaManagerSetup.exe")) {
            Write-Error "Installer creation failed"
            exit 1
          }
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MediaManager-Installer
          path: output/MediaManagerSetup.exe
          retention-days: 5
      
      - name: Create Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ steps.version.outputs.version }}"
          body: |
            Release ${{ steps.version.outputs.version }}
            
            Changes in this release:
            - Updated FFmpeg to latest version
            - Improved build process
            - Enhanced error handling
          files: output/MediaManagerSetup.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}
          generate_release_notes: true
